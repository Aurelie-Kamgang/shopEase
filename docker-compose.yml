version: '3.8'

services:
  # Base de données PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: shopease-pg
    environment:
      POSTGRES_DB: shopease
      POSTGRES_USER: shopease
      POSTGRES_PASSWORD: shopease123
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - shopease-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shopease -d shopease"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Spring Boot
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shopease-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/shopease
      SPRING_DATASOURCE_USERNAME: shopease
      SPRING_DATASOURCE_PASSWORD: shopease123
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver   # sécurité : force le driver PG
      SERVER_PORT: 8080
      # STRIPE_SECRET: sk_test_xxx
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - shopease-network
    restart: unless-stopped
    healthcheck:
      # utilise wget, souvent présent; sinon installe curl dans ton Dockerfile backend
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/actuator/health | grep -q UP"]
      interval: 30s
      timeout: 10s
      retries: 3

  # UI React
  ui:
    build:
      context: ./UI
      dockerfile: Dockerfile
    container_name: shopease-ui
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - shopease-network
    restart: unless-stopped

volumes:
  pg_data:

networks:
  shopease-network:
    driver: bridge
